name: validate & plan Terraform
on:
  pull_request:
    branches:
      - main
defaults:
  run:
    working-directory: "infrastructure"
jobs:
  check-terraform:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
      - name: Setup GCP Credential
        id: gcp-cred
        run: echo $GCP_CRED_BASE64 | base64 --decode > /tmp/serviceaccount.json
        env:
          GCP_CRED_BASE64: ${{ secrets.GCP_CRED_BASE64 }}
      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
      - name: Terraform Plan
        id: plan
        run: >
          terraform plan -no-color
          -var "project=$GCP_PROJECT"
          -var "credentials_file=$GCP_CRED_PATH"
          -var "vm_serviceaccount_email=$GCP_VM_SERVICEACCOUNT_EMAIL"
        continue-on-error: true
        env:
          GCP_PROJECT: minecraft-abekoh
          GCP_CRED_PATH: /tmp/serviceaccount.json
          GCP_VM_SERVICEACCOUNT_EMAIL: ${{ secrets.GCP_VM_SERVICEACCOUNT_EMAIL }}
      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outputs.stdout }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
              
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
